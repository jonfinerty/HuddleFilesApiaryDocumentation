FORMAT: 1A
HOST: http://api.huddle.net/

# Huddle Files

Huddle is platform for secure external collaboration. For more details on the product, visit http://www.huddle.com/product-overview/

This is the documentation for the files-related APIs that Huddle provides.

For site wide API standards and conventions see: [INSERT LINK TO OVERALL API DOCS]

# Group Documents
Documents represent files stored within Huddle, such as spreadsheets or images. Documents also have metadata for version history and commenting.

## Document [/files/documents/{documentId}]

### Retrieve a Document [GET]

When retrieving a folder, the response will contain the list of documents within the folder. Each document will advertise a self link, which you can use to GET the full document.

An If-Modified-Since header can be specified in the Request header to indicate that only if there are changes to the Document resource since the specified time should they be sent.

Additionally, Last-Modified is included in the response to indicate the last time the Document resource was generated.

+ Parameters
    + documentId (integer) ... ID of the document.

+ Request XML
    + Headers

            Accept: application/vnd.huddle.data+xml
            Authorization: OAuth2 frootymcnooty/vonbootycherooty
            If-Modified-Since: Thu, 04 Dec 1986 12:34:56 GMT

+ Response 200 (application/vnd.huddle.data+xml)

    + Headers

            Last-Modified: Thu, 04 Dec 1986 12:34:56 GMT

    + Body

            <document title="TPS report May 2010" description="relentlessly mundane and enervating.">
              <link rel="self" href="..." />
              <link rel="parent" href="..." title="..."/>
              <link rel="edit" href="..." />
              <link rel="move" href="..." />
              <link rel="delete" href="..." />
              <link rel="content" href="..." title="..." type="..." />
              <link rel="lock" href="..." />
              <link rel="version-history" href="..." />
              <link rel="create-version" href="..." />
              <link rel="comments" href="..." count="2" />
              <link rel="approvals" href="..." />
              <link rel="permissions" href="..." />
              <link rel="share" href="..." />
              <link rel="previews" href="..." />
              <link rel="alternate" href="..." />
              <link rel="alternate" href="..." type="text/html" />
              <link rel="shortlink" href="..." type="text/html" />
              <link rel="copy" href="..." />
              <link rel="audittrail" href="..." />
              <link rel="printed" href="..." />
              <link rel="make-offline" href="..." />
              <link rel="publish" href="..." />
              <link rel="publications" href="..." />
              <actor name="Peter Gibson" email="peter.gibson@example.com" rel="owner">
                <link rel="self" href="..." />
                <link rel="avatar" href="..." type="image/jpg" />
                <link rel="alternate" href="..." type="text/html" />
              </actor>
              <actor name="Barry Potter" email="barry.potter@example.com" rel="updated-by">
                <link rel="self" href="..." />
                <link rel="avatar" href="..." type="image/jpg" />
                <link rel="alternate" href="..." type="text/html" />
              </actor>
              <size>19475</size>
              <version>98</version>
              <created>2007-10-10T09:02:17Z</created>
              <updated>2011-10-10T09:02:17Z</updated>
              <processingStatus>Complete</processingStatus>
              <views>9</views>
              <workspace title="My workspace">
                <link rel="self" href="..." />
              </workspace>
              <thumbnails>
                <thumbnail type=”medium”>
                  <link rel="content" href="..." />
                </thumbnail>
              </thumbnails>
              <publications>
                <link rel="bookmark" href="..." />
                <publishedDate>2014-06-15T09:43:17Z</publishedDate>
                <documentVersion title="My amazing document is amazing">
                   <link rel="self" href="..." />
                   <version>2</version>
                   <contentType>application/pdf</contentType>
                </documentVersion>
                <scope>Public</scope>
              </publications>
            </document>


+ Request JSON
    + Headers

            Accept: application/vnd.huddle.data+json
            Authorization: OAuth2 frootymcnooty/vonbootycherooty
            If-Modified-Since: Thu, 04 Dec 1986 12:34:56 GMT


+ Response 200 (application/vnd.huddle.data+json)

    + Headers

            Last-Modified: Thu, 04 Dec 1986 12:34:56 GMT

    + Body

            {
                "title" : "TPS report May 2010",
                "description" : "relentlessly mundane and enervating.",
                "links" : [
                  {
                    "rel" : "self",
                    "href" : "..."
                  }, {
                    "rel" : "parent",
                    "href" : "..."
                  }, {
                    "rel" : "edit",
                    "href" : "..."
                  }, {
                    "rel" : "move",
                    "href" : "..."
                  }, {
                    "rel" : "delete",
                    "href" : "..."
                  }, {
                    "rel" : "content",
                    "href" : "...",
                    "title" : "...",
                    "type" : "..."
                  }, {
                    "rel" : "lock",
                    "href" : "..."
                  }, {
                    "rel" : "version-history",
                    "href" : "..."
                  }, {
                    "rel" : "create-version",
                    "href" : "..."
                  }, {
                    "rel" : "comments",
                    "href" : "..."
                  }, {
                    "rel" : "approvals",
                    "href" : "..."
                  }, {
                    "rel" : "permissions",
                    "href" : "..."
                  }, {
                    "rel" : "share",
                    "href" : "..."
                  }, {
                    "rel" : "previews",
                    "href" : "..."
                  }, {
                    "rel" : "alternative",
                    "href" : "..."
                  }, {
                    "rel" : "alternative",
                    "href" : "...",
                    "type" : "text/html"
                  }, {
                    "rel" : "shortlink",
                    "href" : "...",
                    "type" : "text/html"
                  }, {
                    "rel" : "copy",
                    "href" : "..."
                  }, {
                    "rel" : "audittrail",
                    "href" : "..."
                  }, {
                    "rel" : "printed",
                    "href" : "..."
                  }, {
                    "rel" : "make-offline",
                    "href" : "..."
                  }, {
                    "rel" : "publish",
                    "href" : "..."
                  }, {
                    "rel" : "publications",
                    "href" : "..."
                  }
                ],
                "actors" : [
                  {
                    "name" : "Peter Gibson",
                    "email" : "peter.gibson@example.com",
                    "rel" : "owner",
                    "links" : [
                      {
                        "rel" : "self",
                        "href" : "..."
                      }, {
                        "rel" : "avatar",
                        "href" : "...",
                        "type" : "image/jpg"
                      }, {
                        "rel" : "alternate",
                        "href" : "...",
                        "type" : "text/html"
                      }
                    ]
                  },
                  {
                    "name" : "Barry Potter",
                    "email" : "arry.potter@example.com",
                    "rel" : "updated-by",
                    "links" : [
                      {
                        "rel" : "self",
                        "href" : "..."
                      }, {
                        "rel" : "avatar",
                        "href" : "...",
                        "type" : "image/jpg"
                      }, {
                        "rel" : "alternate",
                        "href" : "...",
                        "type" : "text/html"
                      }
                    ]
                  }
                ],
                "size" : 19475,
                "version" : 98,
                "created" : "2007-10-10T09:02:17Z",
                "updated" : "2007-10-10T09:02:17Z",
                "processingStatus" : "Complete",
                "views" : 9,
                "workspace" : {
                  "title" : "My workspace",
                  "links": [
                    {
                      "rel": "self",
                      "href": "..."
                    }
                  ]
                },
                "thumbnails" : [
                  {
                    "type" : "medium",
                    "links" : [
                      {
                        "rel" : "content",
                        "href" : "..."
                      }
                    ]
                  }
                ],
                "publications" : {
                  "links" : [
                    {
                      "rel" : "bookmark",
                      "href" : "..."
                    }
                  ],
                  "publishedDate" : "2014-06-15T09:43:17Z",
                  "documentVersion" : {
                    "title" : "My amazing document is amazing",
                    "links" : [
                      {
                        "rel" : "self",
                        "href" : "..."
                      }
                    ],
                    "version" : 2,
                    "contentType" : "application/pdf"
                  },
                  "scope" : "Public"
                }
            }
            
### Deleting a Document [DELETE]
This resource supports deleting a document. If the authenticated user can delete a document, the document resource will advertise a link with @rel value of delete. To delete the document, issue a DELETE request to the delete URI.

+ Parameters
    + documentId (integer) ... ID of the document.

+ Request
    + Headers

            Authorization: OAuth2 frootymcnooty/vonbootycherooty

+ Response 200
    + Headers

            Link: .../files/folders/123;rel="parent"

## Document Content [/files/documents/{documentId}/content{?wasGetImplicit}]

### Download Document Content [GET]

Documents have binary content associated with them. If a document has binary content, it will advertise a link with a @rel value of content. To download the content, GET the URI advertised in the link. The @title attribute of the link will give the filename of the document, and the @type attribute will give the mime-type.

If a document has multiple versions the content link will point to the content of the latest active version, which will be a version that is not deleted and has had content uploaded to it successfully.

A 204 HTTP No Content response will be returned from this endpoint in the case where the document has no binary content.

The endpoint accepts an optional query string argument, wasGetImplicit, to signify the download is implicit, i.e. the associated user did not expressly choose to download the content. For example - the client application is caching / pre-fetching ahead of explicit use. If not specified, the flag will be assumed false. When set the flag ensures a different Activity entry is logged - DocumentDownloadedImplicit rather than DocumentDownloaded.

+ Parameters
    + documentId (integer) ... ID of the document.
    + wasGetImplicit (optional, boolean) ... Signifies the download is implicit, i.e. the associated user did not expressly choose to download the content.

+ Request
    + Headers

            Authorization: OAuth2 frootymcnooty/vonbootycherooty

+ Response 200
    + Headers

            Content-Type: text/plain
            Content-Length: 198
            Content-Disposition: attachment; filename="filename.txt"

    + Body

            Hello - this is the content of your text file. You uploaded it to Huddle to keep it safe and secure, but now it has been used in an API example by a bad developer and so everybody can see it. Oh no!

## Document Thumbnails [/files/documents/{documentId}/thumbnail/medium/content]

### Download Document Thumbnail [GET]
For certain file types, a thumbnail is automatically and asynchronously created when the file is uploaded. This includes the most common image and video MIME types.

If the document version’s MIME type is supported, the Get Document response body will include a "thumbnails" element containing a "thumbnail" child element, which contains a link with a @rel value of content. A GET request to the thumbnail content URI will return the thumbnail content.

If a thumbnail is not available, a 404 will be returned.

+ Parameters
    + documentId (integer) ... ID of the document.

+ Request
    + Headers

            Authorization: OAuth2 frootymcnooty/vonbootycherooty

+ Response 200
    + Headers

            Cache-Control: private, max-age=600
            Content-Type: image/jpeg
            Content-Length: 930

    + Body

            A stream that makes up the image...

## Restoring Documents [/files/documents/{documentId}/restore]

### Restoring a Document [PUT]
This resource supports restoring a document. If the authenticated user can restore a document, /restore can be appended to the document resource URI to restore URI. To restore the document, issue a PUT request to the restore URI.

If successful, this operation will return a 204 No content, with a link header giving the location of the restored document.

This response uses the standard error codes and returns standard response headers.

+ Parameters
    + documentId (integer) ... ID of the document.

+ Request
    + Headers

            Authorization: OAuth2 frootymcnooty/vonbootycherooty

+ Response 204
    + Headers

            Location: /files/documents/{documentId}

## Editing a Document [/files/document/{documentId}/edit]

### Retrieve Editable Document Metadata [GET]

If the authenticated user is authorized to edit a document, it will advertise a link with a @rel value of edit. To update document metadata submit a PUT request to this URI with the editable fields of the document. For an overview of editing resource in Huddle see editing resources.

+ Parameters
    + documentId (integer) ... ID of the document.

+ Request
    + Headers

            Authorization: OAuth2 frootymcnooty/vonbootycherooty
            Accept: application/vnd.huddle.data+xml

+ Response 200
    + Headers

            Content-Type: application/vnd.huddle.data+xml

    + Body

            <document title="old title" description="old description">
                <link rel="parent" href="..." />
            </document>

### Updating Document Title and Description or Moving Document [PUT]

The user then updates the @title and @description attributes in the editable document resource and PUTs it back to the server.

If a document with the same title and the same extension already exists within the folder, you will receive a 409 Conflict.

This resource supports moving a document to a new location. If the authenticated user can move a document, the document resource will advertise a link with a @rel of move. Note that the @href of this link is the same as the @href for editing a document, since a move is actually an edit operation. To move a document, PUT a new link to this move uri, with a @rel value of parent, and an @href value pointing to the new parent folder.

The client should follow the link header and perform a GET. When the 'processingStatus' element is equal to 'Moving' it means that the operation is still ongoing. When the operation is completed the 'processingStatus' element assumes the value 'Complete'. While the document is moving it's not possible to download its content, and a 409 Conflict will be returned if a client attempts to do so.

+ Parameters
    + documentId (integer) ... ID of the document.

+ Request
    + Headers

            Authorization: OAuth2 frootymcnooty/vonbootycherooty
            Content-Type: application/vnd.huddle.data+xml
            Content-Length: 102

    + Body

            <document xmlns="http://schema.huddle.net/2011/02/" title="new title" description="new description" >
                <link rel="parent" href="..." />
            </document>

+ Response 204 (application/vnd.huddle.data+xml)
    + Headers

            Link: .../files/documents/123;rel="parent"

## Copying a Document [/files/document/{documentId}]

### Copying Document [POST]

## Creating a new version of a document [/files/document/{documentId}/version]

### Create Document Metadata for new Version [POST]

### Upload Document Content for new Version [POST]

# Group Folder

# Group Recents

## Recent Items [/files/users/{userId}/recentitems]

### Retrieve Recent Items [GET]

The maximum number of recent items is 50 with subsequent entries resulting in the earliest entries moving off the list.

The POSTing / GETing of recent items is therefore on a LIFO context - with the last file added by the POST being the first retrieved in the GET.

A user may only access their own recent items list.

Huddle's current IMS-style caching will be used. An If-Modified-Since header can be specified in the request header to indicate that only if there are changes to the requested recent items resource since the specified time should they be sent.

Additionally, Last-Modified is included in the response to indicate the last time the recent items resource changed (i.e. a Document was added or removed from the user's recent file list).

Please Note:

* Data returned by the recent items API does not represent the Huddle catalog of data. This data has been provided by a client of Huddle and is a representation of the document at the moment in time a recent file was added.

* Permissions may have changed, and the document may not be available to the user

* To obtain the true latest state of a document a GET should be performed on the Self URI of that document.

+ Parameters
    + userId (integer) ... ID of the current user.

+ Request XML
    + Headers

            Accept: application/vnd.huddle.data+xml
            Authorization: OAuth2 frootymcnooty/vonbootycherooty

+ Response 200 (application/vnd.huddle.data+xml)

    + Headers

            Last-Modified: Thu, 14 Oct 2014 11:11:11 GMT

    + Body

            <recentitems>
              <link rel="self" href="..." />
              <maxItems>50</maxItems>
              <recentitem type="Document">
                <link rel="delete" href="..." />
                <link rel="self" href="..." />
                <title="A recent file document 1 title">
                <contenttype>text/plain</contenttype>
                <workspacetitle>"The parent workspace for document 1" />
                <dateaddedutc>2014-12-23T01:33:44Z />
              </recentitem>
              <recentitem type="document">
                <link rel="delete" href="..." />
                <link rel="self" href="..." />
                <title="A recent file document 2 title">
                <contenttype>text/plain</contenttype>
                <workspacetitle>"The parent workspace for document 2" />
                <dateaddedutc>2014-12-24T11:21:27Z />
              </recentitem>
            </recentitems>


+ Request JSON
    + Headers

            Accept: application/vnd.huddle.data+json
            Authorization: OAuth2 frootymcnooty/vonbootycherooty


+ Response 200 (application/vnd.huddle.data+json)

    + Headers

            Last-Modified: Thu, 04 Dec 1986 12:34:56 GMT

    + Body
    
            {
              "links": [
                {
                  "rel": "self",
                  "href": "..."
                }
              ],
              "maxItems": 50,
              "items": [
                {
                  "type": "Document",
                  "links": [
                    {
                      "rel": "delete",
                      "href": "..."
                    },
                    {
                      "rel": "self",
                      "href": "..."
                    }
                  ],
                  "title": "A recent file document 1 title",
                  "workspacetitletitle": "The parent workspace for document 1",
                  "contenttype": "text/plain",
                  "dateaddedutc": "2015-02-28T10:01:06Z"
                },
                {
                  "type": "document",
                  "links": [
                    {
                      "rel": "delete",
                      "href": "..."
                    }
                  ],
                  "document": {
                    "title": "A recent file document 2 title",
                    "links": [
                      {
                        "rel": "self",
                        "href": "..."
                      }
                    ],
                    "workspacetitle": {
                      "title": "The parent workspace for document 2"
                    }
                  }
                }
              ]
            }

### Add Recent Item [POST]

A file is added to a user's recent list by POSTing to the relevant endpoint. A limited amount of state must be POSTed by clients to populate the list with pertinent information.

As such any retrieved data may be out of date. Resources may exist on the list that the user no longer has access to. A GET against the document resource will both return the right state and whether the user still has access.

POSTing a file incldues the date in the payload. The list will then be sorted on that list. An item that already exists on the list will result in a 201 result, with the file sorted in the list according to the date posted and the existing entries on the list.

+ Parameters
    + userId (integer) ... ID of the current user.

+ Request XML
    + Headers

            Accept: application/vnd.huddle.data+xml
            Authorization: OAuth2 frootymcnooty/vonbootycherooty
            
    + Body
    
            <recentitem>
              <type>Document</type>
              <link rel="self" href="..."/>
              <title>a very important text file</title>
              <contenttype>text/plain</contenttype>
              <workspacetitle>a very important workspace</workspacetitle>
              <dateaddedutc>2014-10-23T12:08:02Z</dateaddedutc>
            </recentitem>


+ Response 201 (application/vnd.huddle.data+xml)

    + Headers

            Location: ...


+ Request JSON
    
    + Headers

            Accept: application/vnd.huddle.data+json
            Authorization: OAuth2 frootymcnooty/vonbootycherooty
            
    + Body
    
            {
              "link": [{
                  "rel": "self",
                  "href": "..."
              }],
              "type":"document",
              "title": "a very important text file",
              "contenttype": "text/plain",
              "workspacetitle": "a very important workspace"
              "dateaddedutc": "2014-10-23T12:08:02Z"
            }


+ Response 201 (application/vnd.huddle.data+json)

    + Headers

            Location: ...

## Recent Item [/files/users/{userId}/recentitems/{documentId}]

### Delete Recent Item [DELETE]

A Document can be removed from a User's recent file list by issuing a DELETE against the User's Recent Items API

+ Parameters
    + userId (integer) ... ID of the current user.
    + documentId (integer) ... ID of the document in the user's recent item list.

+ Request XML
    + Headers

            Accept: application/vnd.huddle.data+xml
            Authorization: OAuth2 frootymcnooty/vonbootycherooty

+ Response 204 (application/vnd.huddle.data+xml)

+ Request JSON
    + Headers

            Accept: application/vnd.huddle.data+json
            Authorization: OAuth2 frootymcnooty/vonbootycherooty

+ Response 204 (application/vnd.huddle.data+json)

# Group Changes

# Group Audit Trail

# Group Bulk Process

# Group Document Library Settings

# Group Locks

# Group Offline Item

# Group Permissions

# Group Share

# Group Comments

# Group Publishing

# Group Approvals

# Group Sharing

# Group Previews

# Group Versions

# Group Byte Range Requests
